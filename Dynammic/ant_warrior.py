import sys
# 식량창고를 공격하려 함
# 여러개의 식량창고, 식량창고는 일직선으로 이어져 있다
# 각 식량창고에는 정해진 수의 식량을 저장하고 있다
# 개미 전사는 식량창고를 선택적으로 약탈하여 식량을 빼앗을 예정
# 메뚜기 정찰병들은 일적선상에 존재하는 식량창고 중, 서로 인접한 식량창고가 공격받으면 바로 알아챌 수 있다
# 따라서 개미전사가 정찰병에게 들키지 않고 식량창고 약탈하려면 최소한 한칸 이상 떨어진 식량창고 약탈해야 한다

n = int(input()) # 3<=n<=100 식량창고의 개수 
array = list(map(int,sys.stdin.readline().split())) # 0<=k<=1000 식량창고에 저장된 식량의 개수

d = [0] * 100 # 계산된 결과 저장 위한 DP테이블

d[0] = array[0] # bottom up 방식으로 왼쪽부터 하나씩 고려
d[1] = max(array[0], array[1]) 

for i in range(2,n):
    d[i] = max(d[i-1], array[i] + d[i-2])

print(d[n-1])

